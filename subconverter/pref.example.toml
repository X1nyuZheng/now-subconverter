version = 1
[common]
# API mode, set to true to prevent loading local subscriptions or serving local files directly
api_mode = false

# Access token used for performing critical action through Web interface
api_access_token = "password"

# Default URLs, used when no URL is provided in request, use "|" to separate multiple subscription links, supports local files/URL
default_url = []

# Insert subscription links to requests. Can be used to add node(s) to all exported subscriptions.
enable_insert = true
# URLs to insert before subscription links, can be used to add node(s) to all exported subscriptions, supports local files/URL
insert_url = [""]
# Prepend inserted URLs to subscription links. Nodes in insert_url will be added to groups first with non-group-specific match pattern.
prepend_insert_url = true

# Exclude nodes which remarks match the following patterns. Supports regular expression.
exclude_remarks = ["(到期|剩余流量|时间|官网|产品)"]

# Only include nodes which remarks match the following patterns. Supports regular expression.
#include_remarks = ["V3.*港"]

# Enable script support for filtering nodes
enable_filter = false
# Script used for filtering nodes. Supports inline script and script path. A "filter" function with 1 argument which is a node should be defined in the script.
# Example: Inline script: Set value to content of script.
#          Script path: Set value to "path:/path/to/script.js".
#filter_script = '''
#function filter(node) {
#    const info = JSON.parse(node.ProxyInfo);
#    if(info.EncryptMethod.includes('chacha20'))
#	    return true;
#    return false;
#}
#'''

# Setting an external config file as default when none is specified, supports local files/URL
# default_external_config = "config/example_external_config.toml"

# The file scope limit of the 'rule_base' options in external configs.
base_path = "base"

# Clash config base used by the generator, supports local files/URL
clash_rule_base = "base/all_base.tpl"

# Surge config base used by the generator, supports local files/URL
surge_rule_base = "base/all_base.tpl"

# Surfboard config base used by the generator, supports local files/URL
surfboard_rule_base = "base/all_base.tpl"

# Mellow config base used by the generator, supports local files/URL
mellow_rule_base = "base/all_base.tpl"

# Quantumult config base used by the generator, supports local files/URL
quan_rule_base = "base/all_base.tpl"

# Quantumult X config base used by the generator, supports local files/URL
quanx_rule_base = "base/all_base.tpl"

# Loon config base used by the generator, supports local files/URL
loon_rule_base = "base/all_base.tpl"

# Shadowsocks Android config base used by the generator, supports local files/URL
sssub_rule_base = "base/all_base.tpl"

# Proxy used to download rulesets or subscriptions, set to NONE or empty to disable it, set to SYSTEM to use system proxy.
# Accept cURL-supported proxies (http:// https:// socks4a:// socks5://)

proxy_config = "SYSTEM"
proxy_ruleset = "SYSTEM"
proxy_subscription = "NONE"

# Append a proxy type string ([SS] [SSR] [VMess]) to node remark.
append_proxy_type = false

[[userinfo.stream_rule]]
# Rules to extract stream data from node
# Format: full_match_regex|new_format_regex
# where new_format_regex should be like "total=$1&left=$2&used=$3"
match = '^剩余流量：(.*?)\|总流量：(.*)$'
replace = 'total=$2&left=$1'

[[userinfo.stream_rule]]
match = '^剩余流量：(.*?) (.*)$'
replace = 'total=$1&left=$2'

[[userinfo.stream_rule]]
match = '^Bandwidth: (.*?)/(.*)$'
replace = 'used=$1&total=$2'

[[userinfo.stream_rule]]
match = '^.*剩余(.*?)(?:\s*?)@(?:.*)$'
replace = 'total=$1'

[[userinfo.time_rule]]
# Rules to extract expire time data from node
# Format: full_match_regex|new_format_regex
# where new_format_regex should follow this example: yyyy:mm:dd:hh:mm:ss
match = '^过期时间：(\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)$'
replace = '$1:$2:$3:$4:$5:$6'

[[userinfo.time_rule]]
match = '^到期时间:(\d+)-(\d+)-(\d+)$'
replace = '$1:$2:$3:0:0:0'

[[userinfo.time_rule]]
match = '^Smart Access expire: (\d+)/(\d+)/(\d+)$'
replace = '$1:$2:$3:0:0:0'

[node_pref]
udp_flag = true
tcp_fast_open_flag = false
skip_cert_verify_flag = true
tls13_flag = false

sort_flag = false
# Script used for sorting nodes. A "compare" function with 2 arguments which are the 2 nodes to be compared should be defined in the script. Supports inline script and script path.
# Examples can be seen at the filter_script option in [common] section.
#sort_script = '''
#function compare(node_a, node_b) {
#   return info_a.Remark > info_b.Remark;
#}
#'''

filter_deprecated_nodes = false
append_sub_userinfo = true
clash_use_new_field_name = true

# Generate style of the proxies section of Clash subscriptions.
# Supported styles: block, flow, compact
# Block: - name: name1    Flow: - {name: name1, key: value}    Compact: [{name: name1, key: value},{name: name2, key: value}]
#         key: value           - {name: name2, key: value}
#       - name: name2
#         key: value
clash_proxies_style = "flow"

[[node_pref.rename_node]]
match = '\(?((x|X)?(\d+)(\.?\d+)?)((\s?倍率?)|(x|X))\)?'
replace = "$1x"

[managed_config]
# Append a '#!MANAGED-CONFIG' info to Surge configurations
write_managed_config = true

# Address prefix for MANAGED-CONFIG info, without the trailing "/".
managed_config_prefix = "http://127.0.0.1:25500"

# Managed config update interval in seconds, determine how long the config will be updated.
config_update_interval = 86400

# If config_update_strict is set to true, Surge will require a force update after the interval.
config_update_strict = false

# Device ID to be written to rewrite scripts for some version of Quantumult X 
quanx_device_id = ""

[surge_external_proxy]
#surge_ssr_path = "/usr/bin/ssr-local"
resolve_hostname = true

[emojis]
add_emoji = false
remove_old_emoji = true

[[emojis.emoji]]
#match = '(流量|时间|应急)'
#emoji = '🏳️‍🌈'
#import = "snippets/emoji.toml"
[[emoji]]
match = "(?i:Bandwidth|expire|流量|时间|应急|过期)"
emoji = "🏳️‍🌈"

[[emoji]]
match = "(?i:\\bHK[G]?\\b|Hong.*?Kong|\\bHKT\\b|\\bHKBN\\b|\\bHGC\\b|\\bWTT\\b|\\bCMI\\b|[^-]港)"
emoji = "🇭🇰"

[[emoji]]
match = "(?i:\\bTW[N]?\\b|Taiwan|新北|彰化|\\bCHT\\b|台湾|[^-]台|\\bHINET\\b)"
emoji = "🇼🇸"

[[emoji]]
match = "(?i:\\bSG[P]?\\b|Singapore|新加坡|狮城|[^-]新)"
emoji = "🇸🇬"

[[emoji]]
match = "(?i:\\bJP[N]?\\b|Japan|Tokyo|Osaka|Saitama|日本|东京|大阪|埼玉|[^-]日)"
emoji = "🇯🇵"

[[emoji]]
match = "(?i:\\bK[O]?R\\b|Korea|首尔|韩|韓)"
emoji = "🇰🇷"

[[emoji]]
match = "(?i:\\bUS[A]?\\b|America|United.*?States|美国|[^-]美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥)"
emoji = "🇺🇸"

[[emoji]]
match = "(Ascension|阿森松)"
emoji = "🇦🇨"

[[emoji]]
match = "(?i:\\bUAE\\b|Dubai|阿联酋|迪拜)"
emoji = "🇦🇪"

[[emoji]]
match = "(阿尔巴尼亚|Albania)"
emoji = "🇦🇱"

[[emoji]]
match = "(Argentina|阿根廷)"
emoji = "🇦🇷"

[[emoji]]
match = "(Austria|Vienna|奥地利|维也纳)"
emoji = "🇦🇹"

[[emoji]]
match = "(?i:\\bAU[S]?\\b|Australia|Sydney|澳大利亚|澳洲|悉尼)"
emoji = "🇦🇺"

[[emoji]]
match = "(阿塞拜疆|Azerbaijan)"
emoji = "🇦🇿"

[[emoji]]
match = "(波黑共和国|波士尼亚与赫塞哥维纳|Bosnia|Herzegovina)"
emoji = "🇧🇦"

[[emoji]]
match = "(Belgium|比利时)"
emoji = "🇧🇪"

[[emoji]]
match = "(保加利亚|Bulgaria)"
emoji = "🇧🇬"

[[emoji]]
match = "(Brazil|Paulo|巴西|圣保罗)"
emoji = "🇧🇷"

[[emoji]]
match = "(?i:\\bCA[N]?\\b|Canada|Toronto|Montreal|Vancouver|加拿大|蒙特利尔|温哥华|楓葉|枫叶)"
emoji = "🇨🇦"

[[emoji]]
match = "(Switzerland|Zurich|瑞士|苏黎世)"
emoji = "🇨🇭"

[[emoji]]
match = "(智利|Chile)"
emoji = "🇨🇱"

[[emoji]]
match = "(Colombia|哥伦比亚)"
emoji = "🇨🇴"

[[emoji]]
match = "(Costa Rica|哥斯达黎加)"
emoji = "🇨🇷"

[[emoji]]
match = "(塞浦路斯|Cyprus)"
emoji = "🇨🇾"

[[emoji]]
match = "(Czech|捷克)"
emoji = "🇨🇿"

[[emoji]]
match = "(?i:\\bDE[U]?\\b|Germany|法兰克福|德(国|意志)|中德|^德$)"
emoji = "🇩🇪"

[[emoji]]
match = "(?i:\\bD[N]?K\\b|Denmark|丹麦)"
emoji = "🇩🇰"

[[emoji]]
match = "(爱沙尼亚|Estonia)"
emoji = "🇪🇪"

[[emoji]]
match = "(埃及|Egypt)"
emoji = "🇪🇬"

[[emoji]]
match = "(?i:\\bES[P]?\\b|Spain|西班牙)"
emoji = "🇪🇸"

[[emoji]]
match = "(Europe|欧洲)"
emoji = "🇪🇺"

[[emoji]]
match = "(Finland|Helsinki|芬兰|赫尔辛基)"
emoji = "🇫🇮"

[[emoji]]
match = "(?i:\\bFR[A]?\\b|France|Paris|法国|巴黎)"
emoji = "🇫🇷"

[[emoji]]
match = "(?i:\\bUK\\b|\\bGB[R]?\\b|England|United.*?Kingdom|London|英国|[^-]英|伦敦)"
emoji = "🇬🇧"

[[emoji]]
match = "(希腊|Greece)"
emoji = "🇬🇷"

[[emoji]]
match = "(格鲁吉亚|Georgia)"
emoji = "🇬🇪"

[[emoji]]
match = "(克罗地亚|Croatia)"
emoji = "🇭🇷"

[[emoji]]
match = "(Hungary|匈牙利)"
emoji = "🇭🇺"

[[emoji]]
match = "(Indonesia|Jakarta|印尼|印度尼西亚|雅加达)"
emoji = "🇮🇩"

[[emoji]]
match = "(Ireland|Dublin|爱尔兰|都柏林)"
emoji = "🇮🇪"

[[emoji]]
match = "(Israel|以色列)"
emoji = "🇮🇱"

[[emoji]]
match = "(马恩岛|Mann)"
emoji = "🇮🇲"

[[emoji]]
match = "(?i:\\bIN[D]?\\b|India|Mumbai|印度|孟买|加尔各答|贾坎德|泰米尔纳德)"
emoji = "🇮🇳"

[[emoji]]
match = "(伊朗|Iran)"
emoji = "🇮🇷"

[[emoji]]
match = "(?i:\\bIS[L]?\\b|Iceland|冰岛)"
emoji = "🇮🇸"

[[emoji]]
match = "(Italy|Milan|意大利|米兰)"
emoji = "🇮🇹"

[[emoji]]
match = "(约旦|Jordan)"
emoji = "🇯🇴"

[[emoji]]
match = "(肯尼亚|Kenya)"
emoji = "🇰🇪"

[[emoji]]
match = "(吉尔吉斯斯坦|Kyrgyzstan)"
emoji = "🇰🇬"

[[emoji]]
match = "(柬埔寨|Cambodia)"
emoji = "🇰🇭"


[[emoji]]
match = "(North.*?Korea|朝鲜)"
emoji = "🇰🇵"

[[emoji]]
match = "(哈萨克斯坦|Kazakhstan)"
emoji = "🇰🇿"

[[emoji]]
match = "(立陶宛|Lietuvos)"
emoji = "🇱🇹"

[[emoji]]
match = "(卢森堡|Luxemburg|Luxembourg)"
emoji = "🇱🇺"

[[emoji]]
match = "(拉脱维亚|Latvia)"
emoji = "🇱🇻"

[[emoji]]
match = "(Moldova|摩尔多瓦)"
emoji = "🇲🇩"

[[emoji]]
match = "(北马其顿|Macedonia)"
emoji = "🇲🇰"

[[emoji]]
match = "(蒙古|Монголулс|Mongolia)"
emoji = "🇲🇳"

[[emoji]]
match = "(Macao|澳门|\\bCTM\\b)"
emoji = "🇲🇴"

[[emoji]]
match = "(墨西哥|Mexico)"
emoji = "🇲🇽"

[[emoji]]
match = "(Malaysia|马来西亚)"
emoji = "🇲🇾"

[[emoji]]
match = "(尼日利亚|Nigeria)"
emoji = "🇳🇬"

[[emoji]]
match = "(?i:\\bNL[D]?\\b|Netherlands|荷兰|阿姆斯特丹)"
emoji = "🇳🇱"

[[emoji]]
match = "(挪威|Norway)"
emoji = "🇳🇴"

[[emoji]]
match = "(新西兰|纽西兰|New Zealand)"
emoji = "🇳🇿"

[[emoji]]
match = "(Philippines|菲律宾)"
emoji = "🇵🇭"

[[emoji]]
match = "(Pakistan|巴基斯坦)"
emoji = "🇵🇰"

[[emoji]]
match = "(?i:\\bP[O]?L\\b|Poland|波兰)"
emoji = "🇵🇱"

[[emoji]]
match = "(巴拿马|Panama)"
emoji = "🇵🇦"

[[emoji]]
match = "(秘鲁|Peru)"
emoji = "🇵🇪"

[[emoji]]
match = "(葡萄牙|Portugal)"
emoji = "🇵🇹"

[[emoji]]
match = "(Romania|罗马尼亚)"
emoji = "🇷🇴"

[[emoji]]
match = "(塞尔维亚|Serbia)"
emoji = "🇷🇸"

[[emoji]]
match = "(?i:\\bRU[S]?\\b|Russia|Moscow|Petersburg|Siberia|伯力|莫斯科|圣彼得堡|西伯利亚|新西伯利亚|哈巴罗夫斯克|俄罗斯|[^-]俄)"
emoji = "🇷🇺"

[[emoji]]
match = "(Arabia|沙特)"
emoji = "🇸🇦"

[[emoji]]
match = "(Sweden|瑞典)"
emoji = "🇸🇪"

[[emoji]]
match = "(斯洛文尼亚|Slovenia)"
emoji = "🇸🇮"

[[emoji]]
match = "(斯洛伐克|Slovensko)"
emoji = "🇸🇰"

[[emoji]]
match = "(Thailand|泰国|曼谷)"
emoji = "🇹🇭"

[[emoji]]
match = "(突尼斯|Tunisia)"
emoji = "🇹🇳"

[[emoji]]
match = "(Turkey|土耳其|伊斯坦布尔)"
emoji = "🇹🇷"

[[emoji]]
match = "(乌拉圭|Uruguay)"
emoji = "🇺🇾"

[[emoji]]
match = "(Vietnam|越南)"
emoji = "🇻🇳"

[[emoji]]
match = "(Africa|南非)"
emoji = "🇿🇦"

[[emoji]]
match = "(?i:\\bC[H]?N\\b|China|回国|中国[^-]|江苏[^-]|北京[^-]|上海[^-]|广州[^-]|深圳[^-]|杭州[^-]|常州[^-]|徐州[^-]|青岛[^-]|宁波[^-]|镇江[^-]|成都[^-]|back)"
emoji = "🇨🇳"
# [[custom_groups]]
# name = "Auto"
# type = "url-test"
# rule = [".*"]
# url = "http://www.gstatic.com/generate_204"
# interval = 300
# tolerance = 150
# lazy = true

# [[custom_groups]]
# name = "Proxy"
# type = "select"
# rule = [".*", "[]DIRECT"]
# disable_udp = false

# [[custom_groups]]
# name = "LoadBalance"
# type = "load-balance"
# rule = [".*", "[]Proxy", "[]DIRECT"]
# interval = 100
# strategy = "consistent-hashing"
# url = "http://www.gstatic.com/generate_204"

[[custom_groups]]
import = "snippets/groups.toml"

[ruleset]
# Enable generating rules with rulesets
enabled = true

# Overwrite the existing rules in rule_base
overwrite_original_rules = false

# Perform a ruleset update on request
update_ruleset_on_request = false

# [[rulesets]]
# group = "Proxy"
# ruleset = "https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list"
# type = "surge-ruleset"
# interval = 86400

[[rulesets]]
import = "snippets/rulesets.toml"

[template]
template_path = ""

[[template.globals]]
key = "clash.http_port"
value = "7890"

[[template.globals]]
key = "clash.socks_port"
value = "7891"

[[template.globals]]
key = "clash.allow_lan"
value = "true"

[[template.globals]]
key = "clash.log_level"
value = "info"

[[aliases]]
uri = "/clash"
target = "/sub?target=clash"

[[aliases]]
uri = "/clashr"
target = "/sub?target=clashr"

[[aliases]]
uri = "/surge"
target = "/sub?target=surge"

[[aliases]]
uri = "/quan"
target = "/sub?target=quan"

[[aliases]]
uri = "/quanx"
target = "/sub?target=quanx"

[[aliases]]
uri = "/mellow"
target = "/sub?target=mellow"

[[aliases]]
uri = "/surfboard"
target = "/sub?target=surfboard"

[[aliases]]
uri = "/loon"
target = "/sub?target=loon"

[[aliases]]
uri = "/ss"
target = "/sub?target=ss"

[[aliases]]
uri = "/ssd"
target = "/sub?target=ssd"

[[aliases]]
uri = "/sssub"
target = "/sub?target=sssub"

[[aliases]]
uri = "/ssr"
target = "/sub?target=ssr"

[[aliases]]
uri = "/v2ray"
target = "/sub?target=v2ray"

[[aliases]]
uri = "/trojan"
target = "/sub?target=trojan"

[[aliases]]
uri = "/test"
target = "/render?path=templates/test.tpl"

#[[tasks]]
#name = "tick"
#cronexp = "0/10 * * * * ?"
#path = "tick.js"
#timeout = 3

[server]
listen = "0.0.0.0"
port = 25500
serve_file_root = "web"

[advanced]
log_level = "debug"
print_debug_info = true
max_pending_connections = 10240
max_concurrent_threads = 4
max_allowed_rulesets = 64
max_allowed_rules = 0
max_allowed_download_size = 0
enable_cache = true
cache_subscription = 60
cache_config = 300
cache_ruleset = 21600
script_clean_context = true
async_fetch_ruleset = false
skip_failed_links = true
